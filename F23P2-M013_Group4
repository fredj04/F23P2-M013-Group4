import random
hap = [7,4,10,5]
dev = [3,10,6,2]

#TASK 1
import random

def exploitOnly():
    # Initialize variables for best cafeteria, the best happiness value, and total happiness
    best_cafeteria = None
    best_happiness = 0
    total_happiness = 0

    # Run through each cafeteria once
    for day in range(1, 5):
        # Generate happiness values based on normal distribution for the current cafeteria
        if day == 1:
            mean = 7
            standard_deviation = 3
        elif day == 2:
            mean = 4
            standard_deviation = 10
        elif day == 3:
            mean = 10
            standard_deviation = 6
        else:
            mean = 5
            standard_deviation = 2

        happiness_value = random.normalvariate(mean, standard_deviation)
        total_happiness += happiness_value

        # Update the best cafeteria for the next 196 days
        if happiness_value > best_happiness:
            best_happiness = happiness_value
            best_cafeteria = day

    # Visit the best cafeteria for the next 196 days
    for day in range(5, 201):
        total_happiness += best_happiness

    return total_happiness

# Call the function and print the result
total_happiness = exploitOnly()
print("Total happiness over 200 days:", total_happiness)





#TASK 2






#TASK 3
# This tasks finds the total amount of happiness for all 200 days.
def eGreedy(e=10):
  c1=[]
  c2=[]
  c3=[]
  c4=[] # sets up 4 empty list
  c1.append(random.normalvariate(hap[0],dev[0]))
  c2.append(random.normalvariate(hap[1],dev[1]))
  c3.append(random.normalvariate(hap[2],dev[2]))
  c4.append(random.normalvariate(hap[3],dev[3])) #appends a random happiness value for each cafeteria once

  for i in range(196):
    r = random.random() # gets a random float between 0-1
    if r < (e/100): # if it is lower then then .10 in this case.
      cblank = random.randomint(1,4) # generates a random int between 1-4 inclusive
      if cblank == 1: 
        c1.append(random.normalvariate(hap[0],dev[0]))
      elif cblank == 2:
        c2.append(random.normalvariate(hap[1],dev[1]))
      elif cblank == 3:
        c3.append(random.normalvariate(hap[2],dev[2]))
      else: #cblank == 4
        c4.append(random.normalvariate(hap[3],dev[3])) # if the random int is the same as the value for the 
#specific cafeteria append a radnom happiness value to it
    else:
      a = []
      a.append(sum(c1)/len(c1))
      a.append(sum(c2)/len(c2))
      a.append(sum(c3)/len(c3))
      a.append(sum(c4)/len(c4)) # finds the average happiness value for each cafeteria
      avg = max(a) #avg is the highest average happiness val
      if avg == a[0]:
        c1.append(random.normalvariate(hap[0],dev[0]))
      elif avg == a[1]:
        c2.append(random.normalvariate(hap[1],dev[1]))
      elif avg == a[2]:
        c3.append(random.normalvariate(hap[2],dev[2]))
      else: #avg == a[3]:
        c4.append(random.normalvariate(hap[3],dev[3])) # if the index of avg equals the specific cafeterias index then append
# a random happiness value to it
  cf = c1+c2+c3+c4 # combines all the lists
  return sum(cf) # returns their sum

      




#TASK 4
